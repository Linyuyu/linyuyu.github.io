<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Es6 on Yuyu</title>
    <link>http://localhost:1313/tags/es6/</link>
    <description>Recent content in Es6 on Yuyu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 08 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/es6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>基礎觀念： Function.call 和 Function.apply 的區別</title>
      <link>http://localhost:1313/post/function_call_apply/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/function_call_apply/</guid>
      <description>Function.call vs Function.apply call 和 apply 都是 Function.prototype 的方法，是 JavaScript 引擎內在就實現了，也就是說所有的 Function 實體，都有 call 和 apply 方法。 區別它們的差異可以簡單的用一段程式碼理解： this.fun(arg1, arg2) == fun.call(this, arg1, arg2)</description>
    </item>
    
    <item>
      <title>基礎觀念： IIFE 立即執行函式</title>
      <link>http://localhost:1313/post/function_iife/</link>
      <pubDate>Fri, 26 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/function_iife/</guid>
      <description>IIFE 立即執行函式 IIFE (Immediately Invoked Function Expression) 是一個定義完馬上就執行的 JavaScript function。 // example 1 (function () { // do something console.log(&#39;invoked&#39;) })() // example 2 (() =&amp;gt; { console.log(&#39;invoked&#39;) })() 它又稱為 Self-Executing Anonymous Function，也是</description>
    </item>
    
  </channel>
</rss>